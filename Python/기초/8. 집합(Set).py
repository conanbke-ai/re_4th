# 집합(Set)
'''
중복을 허용하지 않고, 순서가 없는 컬렉션 자료형
    - 수학에서의 집합 개념을 프로그래밍에 적용한 자료형
    - 합집합, 교집합, 차집합 등의 집합 연산을 빠르게 수행할 수 있음

* 특징
    - 중복된 값을 자동으로 제거
    - 요소의 순서를 보장하지 않음
    - 리스트나 튜플처럼 인덱싱이 불가능
    - 요소는 해시 가능한(immutable) 객체여야 함
    - in, not in 사용
    - 빠른 검색 가능
    - 집합 연산 : |, &, -, ^

* 기본 문법
    s1 = {1, 2, 3}
    s1 = {1, 1, 2, 2, 2, 3, 3, 3, 3}
    print(s1)   # {1, 2, 3}

    - 중괄호 {} 안에 값을 나열하면 바로 집합 생성
    - 중복된 값은 자동으로 제거됨

    s2 = set({1, 2, 3, 2})
    print(s2)   # {1, 2, 3}

    - 리스트, 튜플, 문자열 등을 전달할 수 있음
    - 중복된 값은 자동으로 제거됨
'''

# 빈 집합 생성
s = {}
print(type(s))  # <class 'dict'>

s_empty = set()
print(type(s_empty))    # <class 'set'>

'- 빈 중괄호 {} 는 dict로 해석됨'
'- 빈 집합을 만드려면 반드시 set()을 사용해야 함'

# 순서 없음
s = {10, 20, 30}
print(s)    # TypeError: 'set' object is not subscriptable

s = {10, 20, 30}
s_list = list(s)
print(s_list[0])    # 가능하지만, 순서는 예측 불가

'- set은 순서가 없는 컬렉션이기 때문에 인덱싱, 슬라이싱 불가능'
'- 만약 순서를 보장하고 싶다면, list로 변환해서 사용해야 함'
